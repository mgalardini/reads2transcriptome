#!/usr/bin/env python

__author__ = "Marco Galardini"
__version__ = "0.0.1"

def get_options():
    import argparse

    # create the top-level parser
    description = "Extract 1:1 orthologs from one or more orthology files"
    parser = argparse.ArgumentParser(description = description,
                                     prog = 'get_orthologs')

    parser.add_argument('orthologs', action='store',
                        nargs='+',
                        help='Orthology file')

    parser.add_argument('--version', action='version',
                         version='%(prog)s '+__version__)

    return parser.parse_args()

def parse_orthologs(infile):
    d = {}
    for l in open(infile):
        if l.strip().startswith('#'):
            continue
        orth, prot, org = l.strip().split()
        d[orth] = d.get(orth, set())
        d[orth].add( (prot, org) )
    return d

def get_single_orthologs(infile):
    orths = {}
    d = parse_orthologs(infile)
    singles = [x for x in d
               if len(d[x]) == 2 and
               len({y[1] for y in d[x]}) == 2]
    for k in singles:
        reference = [x for x in d[k] if x[1] == 'reference'][0][0]
        target = [x for x in d[k] if x[1] == 'target'][0][0]
        
        orths[target] = reference
    
    return orths

if __name__ == "__main__":
    import sys
    options = get_options()

    # Load the orthologs, if provided
    overall = set()
    for infile in options.orthologs:
        orthologs = get_single_orthologs(infile)
        if len(overall) == 0:
            for k in orthologs.values():
                overall.add(k)
        else:
            overall = overall.intersection(orthologs.values())
    for k in sorted(overall):
        print(k)
