#!/usr/bin/env python

__author__ = "Marco Galardini"
__version__ = '0.1.0'

def get_options():
    import argparse

    # create the top-level parser
    description = "Compare two bigwig files."
    parser = argparse.ArgumentParser(description = description,
                                     prog = 'compare_bigwig')

    parser.add_argument('file1', action='store',
                        help='BigWig file 1')
    parser.add_argument('file2', action='store',
                        help='BigWig file 2')

    parser.add_argument('genome', action='store',
                        help='Genome Fasta file')
    
    parser.add_argument('--version', action='version',
                         version='%(prog)s '+__version__)

    return parser.parse_args()

if __name__ == "__main__":
    options = get_options()

    import sys
    from bx.bbi.bigwig_file import BigWigFile
    from Bio import SeqIO

    # Open the BigWig files
    f1 = BigWigFile(open(options.file1, 'rb'))
    f2 = BigWigFile(open(options.file2, 'rb'))

    # Get chromosome names and sizes
    for s in SeqIO.parse(options.genome, 'fasta'):
        sys.stderr.write('%s %d\n'%(s.id, len(s)))
        # Compare over a 10kbp window
        # (roughly 100 positions in E. coli)
        if len(s) < 10000:
            continue
        s1 = f1.summarize(s.id, 0, len(s), len(s)/float(10000))
        s2 = f2.summarize(s.id, 0, len(s), len(s)/float(10000))

        for i1, i2 in zip(s1.sum_data, s2.sum_data):
            print('\t'.join( (s.id, str(i1), str(i2)) ))
